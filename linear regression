import numpy as np

# Sample data points
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 4, 5, 4, 5])

# Calculating the coefficients
# B1 = sum((x - mean(x)) * (y - mean(y))) / sum((x - mean(x))^2)
# B0 = mean(y) - B1 * mean(x)
B1 = np.sum((x - np.mean(x)) * (y - np.mean(y))) / np.sum((x - np.mean(x))**2)
B0 = np.mean(y) - B1 * np.mean(x)

# Predict function
def predict(new_x):
    return B0 + B1 * new_x

# Making a prediction
new_x = 6
prediction = predict(new_x)

print(f'Predicted value for x={new_x}: y={prediction}')

# To visualize the results (if you wish to include plotting)
import matplotlib.pyplot as plt

# Plotting the data points
plt.scatter(x, y, color='blue', label='Data Points')

# Plotting the regression line
line = B0 + B1 * x
plt.plot(x, line, color='red', label='Regression Line')

# Labels and legend
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()

# ShowÂ plot
plt.show()
